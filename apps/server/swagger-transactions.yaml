swagger: '2.0'
info:
  title: Bank Argent API docs(Transactions)
  description: Contains all necessary endpoints for the transactions feature
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: [ ]


paths:
  /account/{accountId}/transactions:
    get:
      tags:
        - Transactions module
      summary: Get current month transactions
      description: API returns a list array of all transactions for the current month
      parameters:
        - name: accountId
          in: path
          description: The UUI of the concerned account
          required: true
          type: string
      responses:
        '200':
          description: Found transactions
          schema:
            $ref: '#/definitions/TransactionArrayBody'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/ServerError'
  /account/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transactions module
      summary: Get one transaction
      description: Return details of a single transaction by  `id`
      parameters:
        - name: transactionId
          in: path
          description: The UUI of the needed transaction
          required: true
          type: string
      responses:
        '200':
          description: Found transaction datas
          schema:
            $ref: '#/definitions/TransactionBody'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/ServerError'

    patch:
      tags:
        - Transactions module
      summary: Update transaction details
      description: >
        API for update details of a specific transaction by  `id`.
        It will only update the given values.
      parameters:
        - name: transactionId
          in: path
          description: The UUI of the transaction to update.
          required: true
          type: string
        - name: body
          in: body
          description: Transaction values to update
          required: true
          schema:
            $ref: '#/definitions/TransactionPayload'
      responses:
        '201':
          description: Transaction updated
          schema:
            $ref: '#/definitions/TransactionBody'
        '404':
          $ref: '#/responses/NotFound'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/ServerError'


responses:
  BadRequest:
    description: Bad Request (eg. missing parameters)
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: Not found transaction
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized (Token expired)
    schema:
      $ref: '#/definitions/Error'
  Forbidden:
    description: Forbidden (Not the owner)
    schema:
      $ref: '#/definitions/Error'
  ServerError:
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Error'


definitions:
  Error:
    type: object
    properties:
      code:
        type: number
      message:
        type: string
    required:
      - code
      - message
  TransactionBody:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      createdAt:
        type: string
      accountId:
        type: string
      updatedAt:
        type: string
      amount:
        type: number
      balance:
        type: number
      desc:
        type: string
      transactionType:
        type: string
      category:
        type: array
        items:
          type: string
          enum: [ Food, Entertainment, Shopping, Bills, Transport, Other ]
          nullable: true
      notes:
        type: string
        nullable: true
  TransactionArrayBody:
    type: array
    items:
      type: object
      $ref: '#/definitions/TransactionBody'
  TransactionDetailsBody:
    type: object
    properties:
      id:
        type: string
      transactionId:
        type: string
      category:
        type: array
        items:
          type: string
          enum: [ Food, Entertainment, Shopping, Bills, Transport, Other ]
          nullable: true
      notes:
        type: string
        nullable: true

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      data:
        type: object
  TransactionPayload:
    type: object
    properties:
      category:
        type: string
        enum: [ Food, Entertainment, Shopping, Bills, Transport, Other ]
        nullable: true
      notes:
        type: string
        nullable: true
